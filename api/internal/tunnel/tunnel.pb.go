// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.31.0--rc2
// source: tunnel.proto

package tunnel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status of the proxy response
type ProxyResponseType int32

const (
	ProxyResponseType_UNKNOWN ProxyResponseType = 0
	ProxyResponseType_HEADERS ProxyResponseType = 1
	ProxyResponseType_DATA    ProxyResponseType = 2
	ProxyResponseType_END     ProxyResponseType = 3
	ProxyResponseType_ERROR   ProxyResponseType = 4
)

// Enum value maps for ProxyResponseType.
var (
	ProxyResponseType_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEADERS",
		2: "DATA",
		3: "END",
		4: "ERROR",
	}
	ProxyResponseType_value = map[string]int32{
		"UNKNOWN": 0,
		"HEADERS": 1,
		"DATA":    2,
		"END":     3,
		"ERROR":   4,
	}
)

func (x ProxyResponseType) Enum() *ProxyResponseType {
	p := new(ProxyResponseType)
	*p = x
	return p
}

func (x ProxyResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProxyResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_tunnel_proto_enumTypes[0].Descriptor()
}

func (ProxyResponseType) Type() protoreflect.EnumType {
	return &file_tunnel_proto_enumTypes[0]
}

func (x ProxyResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProxyResponseType.Descriptor instead.
func (ProxyResponseType) EnumDescriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{0}
}

// Message sent by the agent
type AgentMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*AgentMessage_Registration
	//	*AgentMessage_Status
	//	*AgentMessage_Proxy
	//	*AgentMessage_HelmValues
	//	*AgentMessage_HelmDelete
	//	*AgentMessage_HelmInstall
	//	*AgentMessage_TerminalStream
	//	*AgentMessage_PgwebResponse
	Message       isAgentMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentMessage) Reset() {
	*x = AgentMessage{}
	mi := &file_tunnel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMessage) ProtoMessage() {}

func (x *AgentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMessage.ProtoReflect.Descriptor instead.
func (*AgentMessage) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{0}
}

func (x *AgentMessage) GetMessage() isAgentMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *AgentMessage) GetRegistration() *RegistrationRequest {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_Registration); ok {
			return x.Registration
		}
	}
	return nil
}

func (x *AgentMessage) GetStatus() *StatusUpdate {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *AgentMessage) GetProxy() *ProxyResponse {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_Proxy); ok {
			return x.Proxy
		}
	}
	return nil
}

func (x *AgentMessage) GetHelmValues() *HelmValuesResponse {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_HelmValues); ok {
			return x.HelmValues
		}
	}
	return nil
}

func (x *AgentMessage) GetHelmDelete() *HelmDeleteResponse {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_HelmDelete); ok {
			return x.HelmDelete
		}
	}
	return nil
}

func (x *AgentMessage) GetHelmInstall() *HelmInstallResponse {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_HelmInstall); ok {
			return x.HelmInstall
		}
	}
	return nil
}

func (x *AgentMessage) GetTerminalStream() *TerminalStream {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_TerminalStream); ok {
			return x.TerminalStream
		}
	}
	return nil
}

func (x *AgentMessage) GetPgwebResponse() *PgWebResponse {
	if x != nil {
		if x, ok := x.Message.(*AgentMessage_PgwebResponse); ok {
			return x.PgwebResponse
		}
	}
	return nil
}

type isAgentMessage_Message interface {
	isAgentMessage_Message()
}

type AgentMessage_Registration struct {
	Registration *RegistrationRequest `protobuf:"bytes,1,opt,name=registration,proto3,oneof"` // Initial registration
}

type AgentMessage_Status struct {
	Status *StatusUpdate `protobuf:"bytes,2,opt,name=status,proto3,oneof"` // Periodic status updates
}

type AgentMessage_Proxy struct {
	Proxy *ProxyResponse `protobuf:"bytes,3,opt,name=proxy,proto3,oneof"` // Proxy responses
}

type AgentMessage_HelmValues struct {
	HelmValues *HelmValuesResponse `protobuf:"bytes,4,opt,name=helmValues,proto3,oneof"` // Helm values responses
}

type AgentMessage_HelmDelete struct {
	HelmDelete *HelmDeleteResponse `protobuf:"bytes,5,opt,name=helmDelete,proto3,oneof"` // Helm delete responses
}

type AgentMessage_HelmInstall struct {
	HelmInstall *HelmInstallResponse `protobuf:"bytes,6,opt,name=helmInstall,proto3,oneof"` // Helm install responses
}

type AgentMessage_TerminalStream struct {
	TerminalStream *TerminalStream `protobuf:"bytes,7,opt,name=terminalStream,proto3,oneof"`
}

type AgentMessage_PgwebResponse struct {
	PgwebResponse *PgWebResponse `protobuf:"bytes,8,opt,name=pgwebResponse,proto3,oneof"`
}

func (*AgentMessage_Registration) isAgentMessage_Message() {}

func (*AgentMessage_Status) isAgentMessage_Message() {}

func (*AgentMessage_Proxy) isAgentMessage_Message() {}

func (*AgentMessage_HelmValues) isAgentMessage_Message() {}

func (*AgentMessage_HelmDelete) isAgentMessage_Message() {}

func (*AgentMessage_HelmInstall) isAgentMessage_Message() {}

func (*AgentMessage_TerminalStream) isAgentMessage_Message() {}

func (*AgentMessage_PgwebResponse) isAgentMessage_Message() {}

// Add this message definition
type TerminalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pod           string                 `protobuf:"bytes,3,opt,name=pod,proto3" json:"pod,omitempty"`
	Container     string                 `protobuf:"bytes,4,opt,name=container,proto3" json:"container,omitempty"`
	Command       string                 `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalRequest) Reset() {
	*x = TerminalRequest{}
	mi := &file_tunnel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalRequest) ProtoMessage() {}

func (x *TerminalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalRequest.ProtoReflect.Descriptor instead.
func (*TerminalRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{1}
}

func (x *TerminalRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TerminalRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TerminalRequest) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *TerminalRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *TerminalRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

// Update the ServerMessage to include TerminalRequest
type ServerMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerMessage_Registration
	//	*ServerMessage_Status
	//	*ServerMessage_Proxy
	//	*ServerMessage_Projects
	//	*ServerMessage_HelmValuesRequest
	//	*ServerMessage_HelmDeleteRequest
	//	*ServerMessage_HelmInstallRequest
	//	*ServerMessage_TerminalStream
	//	*ServerMessage_DbuiRequest
	//	*ServerMessage_TerminalRequest
	Message       isServerMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_tunnel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{2}
}

func (x *ServerMessage) GetMessage() isServerMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerMessage) GetRegistration() *RegistrationResponse {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_Registration); ok {
			return x.Registration
		}
	}
	return nil
}

func (x *ServerMessage) GetStatus() *StatusUpdate {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *ServerMessage) GetProxy() *ProxyRequest {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_Proxy); ok {
			return x.Proxy
		}
	}
	return nil
}

func (x *ServerMessage) GetProjects() *ProjectsRequest {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_Projects); ok {
			return x.Projects
		}
	}
	return nil
}

func (x *ServerMessage) GetHelmValuesRequest() *HelmValuesRequest {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_HelmValuesRequest); ok {
			return x.HelmValuesRequest
		}
	}
	return nil
}

func (x *ServerMessage) GetHelmDeleteRequest() *HelmDeleteRequest {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_HelmDeleteRequest); ok {
			return x.HelmDeleteRequest
		}
	}
	return nil
}

func (x *ServerMessage) GetHelmInstallRequest() *HelmInstallRequest {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_HelmInstallRequest); ok {
			return x.HelmInstallRequest
		}
	}
	return nil
}

func (x *ServerMessage) GetTerminalStream() *TerminalStream {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_TerminalStream); ok {
			return x.TerminalStream
		}
	}
	return nil
}

func (x *ServerMessage) GetDbuiRequest() *DbUiRequest {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_DbuiRequest); ok {
			return x.DbuiRequest
		}
	}
	return nil
}

func (x *ServerMessage) GetTerminalRequest() *TerminalRequest {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_TerminalRequest); ok {
			return x.TerminalRequest
		}
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_Registration struct {
	Registration *RegistrationResponse `protobuf:"bytes,1,opt,name=registration,proto3,oneof"` // Response to registration
}

type ServerMessage_Status struct {
	Status *StatusUpdate `protobuf:"bytes,2,opt,name=status,proto3,oneof"` // Server status updates
}

type ServerMessage_Proxy struct {
	Proxy *ProxyRequest `protobuf:"bytes,3,opt,name=proxy,proto3,oneof"` // Proxy requests
}

type ServerMessage_Projects struct {
	Projects *ProjectsRequest `protobuf:"bytes,4,opt,name=projects,proto3,oneof"` // Projects request
}

type ServerMessage_HelmValuesRequest struct {
	HelmValuesRequest *HelmValuesRequest `protobuf:"bytes,5,opt,name=helmValuesRequest,proto3,oneof"` // Helm values request
}

type ServerMessage_HelmDeleteRequest struct {
	HelmDeleteRequest *HelmDeleteRequest `protobuf:"bytes,6,opt,name=helmDeleteRequest,proto3,oneof"` // Helm delete request
}

type ServerMessage_HelmInstallRequest struct {
	HelmInstallRequest *HelmInstallRequest `protobuf:"bytes,7,opt,name=helmInstallRequest,proto3,oneof"` // Helm install request
}

type ServerMessage_TerminalStream struct {
	TerminalStream *TerminalStream `protobuf:"bytes,8,opt,name=terminalStream,proto3,oneof"`
}

type ServerMessage_DbuiRequest struct {
	DbuiRequest *DbUiRequest `protobuf:"bytes,9,opt,name=dbuiRequest,proto3,oneof"`
}

type ServerMessage_TerminalRequest struct {
	TerminalRequest *TerminalRequest `protobuf:"bytes,10,opt,name=terminalRequest,proto3,oneof"` // Add this line
}

func (*ServerMessage_Registration) isServerMessage_Message() {}

func (*ServerMessage_Status) isServerMessage_Message() {}

func (*ServerMessage_Proxy) isServerMessage_Message() {}

func (*ServerMessage_Projects) isServerMessage_Message() {}

func (*ServerMessage_HelmValuesRequest) isServerMessage_Message() {}

func (*ServerMessage_HelmDeleteRequest) isServerMessage_Message() {}

func (*ServerMessage_HelmInstallRequest) isServerMessage_Message() {}

func (*ServerMessage_TerminalStream) isServerMessage_Message() {}

func (*ServerMessage_DbuiRequest) isServerMessage_Message() {}

func (*ServerMessage_TerminalRequest) isServerMessage_Message() {}

// Agent registration request
type RegistrationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentName     string                 `protobuf:"bytes,1,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"`
	AgentVersion  string                 `protobuf:"bytes,2,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrationRequest) Reset() {
	*x = RegistrationRequest{}
	mi := &file_tunnel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRequest) ProtoMessage() {}

func (x *RegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRequest.ProtoReflect.Descriptor instead.
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{3}
}

func (x *RegistrationRequest) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *RegistrationRequest) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

// Server registration response
type RegistrationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Optional message on success or failure
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	mi := &file_tunnel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{4}
}

func (x *RegistrationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegistrationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Status update (for both agent and server)
type StatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage      float64                `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	HealthStatus  string                 `protobuf:"bytes,3,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	Provider      string                 `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	K8SVersion    string                 `protobuf:"bytes,5,opt,name=k8s_version,json=k8sVersion,proto3" json:"k8s_version,omitempty"`
	PodCapacity   int32                  `protobuf:"varint,6,opt,name=pod_capacity,json=podCapacity,proto3" json:"pod_capacity,omitempty"`
	PodCount      int32                  `protobuf:"varint,7,opt,name=pod_count,json=podCount,proto3" json:"pod_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusUpdate) Reset() {
	*x = StatusUpdate{}
	mi := &file_tunnel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdate) ProtoMessage() {}

func (x *StatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdate.ProtoReflect.Descriptor instead.
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{5}
}

func (x *StatusUpdate) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *StatusUpdate) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *StatusUpdate) GetHealthStatus() string {
	if x != nil {
		return x.HealthStatus
	}
	return ""
}

func (x *StatusUpdate) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *StatusUpdate) GetK8SVersion() string {
	if x != nil {
		return x.K8SVersion
	}
	return ""
}

func (x *StatusUpdate) GetPodCapacity() int32 {
	if x != nil {
		return x.PodCapacity
	}
	return 0
}

func (x *StatusUpdate) GetPodCount() int32 {
	if x != nil {
		return x.PodCount
	}
	return 0
}

// ProxyRequest sent by the server to the agent
type ProxyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	ProxyType     string                 `protobuf:"bytes,6,opt,name=proxy_type,json=proxyType,proto3" json:"proxy_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyRequest) Reset() {
	*x = ProxyRequest{}
	mi := &file_tunnel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRequest) ProtoMessage() {}

func (x *ProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRequest.ProtoReflect.Descriptor instead.
func (*ProxyRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{6}
}

func (x *ProxyRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ProxyRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ProxyRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProxyRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ProxyRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *ProxyRequest) GetProxyType() string {
	if x != nil {
		return x.ProxyType
	}
	return ""
}

// ProxyResponse sent by the agent to the server
type ProxyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Status        ProxyResponseType      `protobuf:"varint,2,opt,name=status,proto3,enum=tunnel.ProxyResponseType" json:"status,omitempty"`
	StatusCode    int32                  `protobuf:"varint,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyResponse) Reset() {
	*x = ProxyResponse{}
	mi := &file_tunnel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyResponse) ProtoMessage() {}

func (x *ProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyResponse.ProtoReflect.Descriptor instead.
func (*ProxyResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{7}
}

func (x *ProxyResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ProxyResponse) GetStatus() ProxyResponseType {
	if x != nil {
		return x.Status
	}
	return ProxyResponseType_UNKNOWN
}

func (x *ProxyResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ProxyResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ProxyResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// ProjectsResponse sent by the agent to the server
type ProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*Project             `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectsResponse) Reset() {
	*x = ProjectsResponse{}
	mi := &file_tunnel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectsResponse) ProtoMessage() {}

func (x *ProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectsResponse.ProtoReflect.Descriptor instead.
func (*ProjectsResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type ProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectsRequest) Reset() {
	*x = ProjectsRequest{}
	mi := &file_tunnel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectsRequest) ProtoMessage() {}

func (x *ProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectsRequest.ProtoReflect.Descriptor instead.
func (*ProjectsRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectsRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type HelmValuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Release       string                 `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelmValuesRequest) Reset() {
	*x = HelmValuesRequest{}
	mi := &file_tunnel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmValuesRequest) ProtoMessage() {}

func (x *HelmValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmValuesRequest.ProtoReflect.Descriptor instead.
func (*HelmValuesRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{10}
}

func (x *HelmValuesRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *HelmValuesRequest) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *HelmValuesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type HelmDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Release       string                 `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelmDeleteRequest) Reset() {
	*x = HelmDeleteRequest{}
	mi := &file_tunnel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmDeleteRequest) ProtoMessage() {}

func (x *HelmDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmDeleteRequest.ProtoReflect.Descriptor instead.
func (*HelmDeleteRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{11}
}

func (x *HelmDeleteRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *HelmDeleteRequest) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *HelmDeleteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type HelmInstallRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	StreamId string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	// Helm chart information
	Chart string `protobuf:"bytes,2,opt,name=chart,proto3" json:"chart,omitempty"`
	// Release name
	Release string `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty"`
	// Namespace
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Values file
	Values []byte `protobuf:"bytes,5,opt,name=values,proto3" json:"values,omitempty"`
	// Repo name
	Repo string `protobuf:"bytes,6,opt,name=repo,proto3" json:"repo,omitempty"`
	// Repo url
	RepoUrl string `protobuf:"bytes,7,opt,name=repoUrl,proto3" json:"repoUrl,omitempty"`
	// Chart version
	Version string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	// Wait for the release to be ready
	Wait bool `protobuf:"varint,9,opt,name=wait,proto3" json:"wait,omitempty"`
	// Timeout for the release to be ready
	Timeout int64 `protobuf:"varint,10,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Create namespace if it doesn't exist
	CreateNamespace bool `protobuf:"varint,11,opt,name=create_namespace,json=createNamespace,proto3" json:"create_namespace,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HelmInstallRequest) Reset() {
	*x = HelmInstallRequest{}
	mi := &file_tunnel_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmInstallRequest) ProtoMessage() {}

func (x *HelmInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmInstallRequest.ProtoReflect.Descriptor instead.
func (*HelmInstallRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{12}
}

func (x *HelmInstallRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *HelmInstallRequest) GetChart() string {
	if x != nil {
		return x.Chart
	}
	return ""
}

func (x *HelmInstallRequest) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *HelmInstallRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmInstallRequest) GetValues() []byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *HelmInstallRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *HelmInstallRequest) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *HelmInstallRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HelmInstallRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

func (x *HelmInstallRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *HelmInstallRequest) GetCreateNamespace() bool {
	if x != nil {
		return x.CreateNamespace
	}
	return false
}

type HelmDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelmDeleteResponse) Reset() {
	*x = HelmDeleteResponse{}
	mi := &file_tunnel_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmDeleteResponse) ProtoMessage() {}

func (x *HelmDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmDeleteResponse.ProtoReflect.Descriptor instead.
func (*HelmDeleteResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{13}
}

func (x *HelmDeleteResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type HelmValuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelmValuesResponse) Reset() {
	*x = HelmValuesResponse{}
	mi := &file_tunnel_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmValuesResponse) ProtoMessage() {}

func (x *HelmValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmValuesResponse.ProtoReflect.Descriptor instead.
func (*HelmValuesResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{14}
}

func (x *HelmValuesResponse) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type HelmInstallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelmInstallResponse) Reset() {
	*x = HelmInstallResponse{}
	mi := &file_tunnel_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmInstallResponse) ProtoMessage() {}

func (x *HelmInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmInstallResponse.ProtoReflect.Descriptor instead.
func (*HelmInstallResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{15}
}

func (x *HelmInstallResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_tunnel_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{16}
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Project) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Project) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Project) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type TerminalStream struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalStream) Reset() {
	*x = TerminalStream{}
	mi := &file_tunnel_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalStream) ProtoMessage() {}

func (x *TerminalStream) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalStream.ProtoReflect.Descriptor instead.
func (*TerminalStream) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{17}
}

func (x *TerminalStream) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TerminalStream) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// Message to launch pgweb
type DbUiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	DbName        string                 `protobuf:"bytes,2,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`                                                             // Database name (used to find <dbname>-creds secret)
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                     // Kubernetes namespace (optional, defaults to "default")
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional labels for the pod
	DbType        string                 `protobuf:"bytes,5,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbUiRequest) Reset() {
	*x = DbUiRequest{}
	mi := &file_tunnel_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbUiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbUiRequest) ProtoMessage() {}

func (x *DbUiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbUiRequest.ProtoReflect.Descriptor instead.
func (*DbUiRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{18}
}

func (x *DbUiRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *DbUiRequest) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *DbUiRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DbUiRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *DbUiRequest) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

type PgWebResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PodName       string                 `protobuf:"bytes,3,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`             // Name of the created pod
	ServiceName   string                 `protobuf:"bytes,4,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"` // Name of the created service
	Port          int32                  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`                                 // Port the service is running on
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PgWebResponse) Reset() {
	*x = PgWebResponse{}
	mi := &file_tunnel_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PgWebResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgWebResponse) ProtoMessage() {}

func (x *PgWebResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgWebResponse.ProtoReflect.Descriptor instead.
func (*PgWebResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{19}
}

func (x *PgWebResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PgWebResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PgWebResponse) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *PgWebResponse) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PgWebResponse) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Message to stop/cleanup pgweb resources
type StopPgWebRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DbName        string                 `protobuf:"bytes,1,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPgWebRequest) Reset() {
	*x = StopPgWebRequest{}
	mi := &file_tunnel_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPgWebRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPgWebRequest) ProtoMessage() {}

func (x *StopPgWebRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPgWebRequest.ProtoReflect.Descriptor instead.
func (*StopPgWebRequest) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{20}
}

func (x *StopPgWebRequest) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *StopPgWebRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type StopPgWebResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPgWebResponse) Reset() {
	*x = StopPgWebResponse{}
	mi := &file_tunnel_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPgWebResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPgWebResponse) ProtoMessage() {}

func (x *StopPgWebResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tunnel_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPgWebResponse.ProtoReflect.Descriptor instead.
func (*StopPgWebResponse) Descriptor() ([]byte, []int) {
	return file_tunnel_proto_rawDescGZIP(), []int{21}
}

func (x *StopPgWebResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopPgWebResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_tunnel_proto protoreflect.FileDescriptor

const file_tunnel_proto_rawDesc = "" +
	"\n" +
	"\ftunnel.proto\x12\x06tunnel\"\xf9\x03\n" +
	"\fAgentMessage\x12A\n" +
	"\fregistration\x18\x01 \x01(\v2\x1b.tunnel.RegistrationRequestH\x00R\fregistration\x12.\n" +
	"\x06status\x18\x02 \x01(\v2\x14.tunnel.StatusUpdateH\x00R\x06status\x12-\n" +
	"\x05proxy\x18\x03 \x01(\v2\x15.tunnel.ProxyResponseH\x00R\x05proxy\x12<\n" +
	"\n" +
	"helmValues\x18\x04 \x01(\v2\x1a.tunnel.HelmValuesResponseH\x00R\n" +
	"helmValues\x12<\n" +
	"\n" +
	"helmDelete\x18\x05 \x01(\v2\x1a.tunnel.HelmDeleteResponseH\x00R\n" +
	"helmDelete\x12?\n" +
	"\vhelmInstall\x18\x06 \x01(\v2\x1b.tunnel.HelmInstallResponseH\x00R\vhelmInstall\x12@\n" +
	"\x0eterminalStream\x18\a \x01(\v2\x16.tunnel.TerminalStreamH\x00R\x0eterminalStream\x12=\n" +
	"\rpgwebResponse\x18\b \x01(\v2\x15.tunnel.PgWebResponseH\x00R\rpgwebResponseB\t\n" +
	"\amessage\"\x98\x01\n" +
	"\x0fTerminalRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x10\n" +
	"\x03pod\x18\x03 \x01(\tR\x03pod\x12\x1c\n" +
	"\tcontainer\x18\x04 \x01(\tR\tcontainer\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommand\"\x97\x05\n" +
	"\rServerMessage\x12B\n" +
	"\fregistration\x18\x01 \x01(\v2\x1c.tunnel.RegistrationResponseH\x00R\fregistration\x12.\n" +
	"\x06status\x18\x02 \x01(\v2\x14.tunnel.StatusUpdateH\x00R\x06status\x12,\n" +
	"\x05proxy\x18\x03 \x01(\v2\x14.tunnel.ProxyRequestH\x00R\x05proxy\x125\n" +
	"\bprojects\x18\x04 \x01(\v2\x17.tunnel.ProjectsRequestH\x00R\bprojects\x12I\n" +
	"\x11helmValuesRequest\x18\x05 \x01(\v2\x19.tunnel.HelmValuesRequestH\x00R\x11helmValuesRequest\x12I\n" +
	"\x11helmDeleteRequest\x18\x06 \x01(\v2\x19.tunnel.HelmDeleteRequestH\x00R\x11helmDeleteRequest\x12L\n" +
	"\x12helmInstallRequest\x18\a \x01(\v2\x1a.tunnel.HelmInstallRequestH\x00R\x12helmInstallRequest\x12@\n" +
	"\x0eterminalStream\x18\b \x01(\v2\x16.tunnel.TerminalStreamH\x00R\x0eterminalStream\x127\n" +
	"\vdbuiRequest\x18\t \x01(\v2\x13.tunnel.DbUiRequestH\x00R\vdbuiRequest\x12C\n" +
	"\x0fterminalRequest\x18\n" +
	" \x01(\v2\x17.tunnel.TerminalRequestH\x00R\x0fterminalRequestB\t\n" +
	"\amessage\"Y\n" +
	"\x13RegistrationRequest\x12\x1d\n" +
	"\n" +
	"agent_name\x18\x01 \x01(\tR\tagentName\x12#\n" +
	"\ragent_version\x18\x02 \x01(\tR\fagentVersion\"J\n" +
	"\x14RegistrationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xf0\x01\n" +
	"\fStatusUpdate\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x02 \x01(\x01R\vmemoryUsage\x12#\n" +
	"\rhealth_status\x18\x03 \x01(\tR\fhealthStatus\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\x12\x1f\n" +
	"\vk8s_version\x18\x05 \x01(\tR\n" +
	"k8sVersion\x12!\n" +
	"\fpod_capacity\x18\x06 \x01(\x05R\vpodCapacity\x12\x1b\n" +
	"\tpod_count\x18\a \x01(\x05R\bpodCount\"\x83\x02\n" +
	"\fProxyRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12;\n" +
	"\aheaders\x18\x04 \x03(\v2!.tunnel.ProxyRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x12\x1d\n" +
	"\n" +
	"proxy_type\x18\x06 \x01(\tR\tproxyType\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8e\x02\n" +
	"\rProxyResponse\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.tunnel.ProxyResponseTypeR\x06status\x12\x1f\n" +
	"\vstatus_code\x18\x03 \x01(\x05R\n" +
	"statusCode\x12<\n" +
	"\aheaders\x18\x04 \x03(\v2\".tunnel.ProxyResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\x10ProjectsResponse\x12+\n" +
	"\bprojects\x18\x01 \x03(\v2\x0f.tunnel.ProjectR\bprojects\".\n" +
	"\x0fProjectsRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\"h\n" +
	"\x11HelmValuesRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x18\n" +
	"\arelease\x18\x02 \x01(\tR\arelease\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"h\n" +
	"\x11HelmDeleteRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x18\n" +
	"\arelease\x18\x02 \x01(\tR\arelease\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"\xb8\x02\n" +
	"\x12HelmInstallRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x14\n" +
	"\x05chart\x18\x02 \x01(\tR\x05chart\x12\x18\n" +
	"\arelease\x18\x03 \x01(\tR\arelease\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06values\x18\x05 \x01(\fR\x06values\x12\x12\n" +
	"\x04repo\x18\x06 \x01(\tR\x04repo\x12\x18\n" +
	"\arepoUrl\x18\a \x01(\tR\arepoUrl\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\x12\x12\n" +
	"\x04wait\x18\t \x01(\bR\x04wait\x12\x18\n" +
	"\atimeout\x18\n" +
	" \x01(\x03R\atimeout\x12)\n" +
	"\x10create_namespace\x18\v \x01(\bR\x0fcreateNamespace\"1\n" +
	"\x12HelmDeleteResponse\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\",\n" +
	"\x12HelmValuesResponse\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"2\n" +
	"\x13HelmInstallResponse\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\"\x8c\x01\n" +
	"\aProject\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"C\n" +
	"\x0eTerminalStream\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"\xee\x01\n" +
	"\vDbUiRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x17\n" +
	"\adb_name\x18\x02 \x01(\tR\x06dbName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x127\n" +
	"\x06labels\x18\x04 \x03(\v2\x1f.tunnel.DbUiRequest.LabelsEntryR\x06labels\x12\x17\n" +
	"\adb_type\x18\x05 \x01(\tR\x06dbType\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x01\n" +
	"\rPgWebResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\bpod_name\x18\x03 \x01(\tR\apodName\x12!\n" +
	"\fservice_name\x18\x04 \x01(\tR\vserviceName\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\"I\n" +
	"\x10StopPgWebRequest\x12\x17\n" +
	"\adb_name\x18\x01 \x01(\tR\x06dbName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"G\n" +
	"\x11StopPgWebResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*K\n" +
	"\x11ProxyResponseType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aHEADERS\x10\x01\x12\b\n" +
	"\x04DATA\x10\x02\x12\a\n" +
	"\x03END\x10\x03\x12\t\n" +
	"\x05ERROR\x10\x042M\n" +
	"\rTunnelService\x12<\n" +
	"\aConnect\x12\x14.tunnel.AgentMessage\x1a\x15.tunnel.ServerMessage\"\x00(\x010\x01B\vZ\t./;tunnelb\x06proto3"

var (
	file_tunnel_proto_rawDescOnce sync.Once
	file_tunnel_proto_rawDescData []byte
)

func file_tunnel_proto_rawDescGZIP() []byte {
	file_tunnel_proto_rawDescOnce.Do(func() {
		file_tunnel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tunnel_proto_rawDesc), len(file_tunnel_proto_rawDesc)))
	})
	return file_tunnel_proto_rawDescData
}

var file_tunnel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tunnel_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_tunnel_proto_goTypes = []any{
	(ProxyResponseType)(0),       // 0: tunnel.ProxyResponseType
	(*AgentMessage)(nil),         // 1: tunnel.AgentMessage
	(*TerminalRequest)(nil),      // 2: tunnel.TerminalRequest
	(*ServerMessage)(nil),        // 3: tunnel.ServerMessage
	(*RegistrationRequest)(nil),  // 4: tunnel.RegistrationRequest
	(*RegistrationResponse)(nil), // 5: tunnel.RegistrationResponse
	(*StatusUpdate)(nil),         // 6: tunnel.StatusUpdate
	(*ProxyRequest)(nil),         // 7: tunnel.ProxyRequest
	(*ProxyResponse)(nil),        // 8: tunnel.ProxyResponse
	(*ProjectsResponse)(nil),     // 9: tunnel.ProjectsResponse
	(*ProjectsRequest)(nil),      // 10: tunnel.ProjectsRequest
	(*HelmValuesRequest)(nil),    // 11: tunnel.HelmValuesRequest
	(*HelmDeleteRequest)(nil),    // 12: tunnel.HelmDeleteRequest
	(*HelmInstallRequest)(nil),   // 13: tunnel.HelmInstallRequest
	(*HelmDeleteResponse)(nil),   // 14: tunnel.HelmDeleteResponse
	(*HelmValuesResponse)(nil),   // 15: tunnel.HelmValuesResponse
	(*HelmInstallResponse)(nil),  // 16: tunnel.HelmInstallResponse
	(*Project)(nil),              // 17: tunnel.Project
	(*TerminalStream)(nil),       // 18: tunnel.TerminalStream
	(*DbUiRequest)(nil),          // 19: tunnel.DbUiRequest
	(*PgWebResponse)(nil),        // 20: tunnel.PgWebResponse
	(*StopPgWebRequest)(nil),     // 21: tunnel.StopPgWebRequest
	(*StopPgWebResponse)(nil),    // 22: tunnel.StopPgWebResponse
	nil,                          // 23: tunnel.ProxyRequest.HeadersEntry
	nil,                          // 24: tunnel.ProxyResponse.HeadersEntry
	nil,                          // 25: tunnel.DbUiRequest.LabelsEntry
}
var file_tunnel_proto_depIdxs = []int32{
	4,  // 0: tunnel.AgentMessage.registration:type_name -> tunnel.RegistrationRequest
	6,  // 1: tunnel.AgentMessage.status:type_name -> tunnel.StatusUpdate
	8,  // 2: tunnel.AgentMessage.proxy:type_name -> tunnel.ProxyResponse
	15, // 3: tunnel.AgentMessage.helmValues:type_name -> tunnel.HelmValuesResponse
	14, // 4: tunnel.AgentMessage.helmDelete:type_name -> tunnel.HelmDeleteResponse
	16, // 5: tunnel.AgentMessage.helmInstall:type_name -> tunnel.HelmInstallResponse
	18, // 6: tunnel.AgentMessage.terminalStream:type_name -> tunnel.TerminalStream
	20, // 7: tunnel.AgentMessage.pgwebResponse:type_name -> tunnel.PgWebResponse
	5,  // 8: tunnel.ServerMessage.registration:type_name -> tunnel.RegistrationResponse
	6,  // 9: tunnel.ServerMessage.status:type_name -> tunnel.StatusUpdate
	7,  // 10: tunnel.ServerMessage.proxy:type_name -> tunnel.ProxyRequest
	10, // 11: tunnel.ServerMessage.projects:type_name -> tunnel.ProjectsRequest
	11, // 12: tunnel.ServerMessage.helmValuesRequest:type_name -> tunnel.HelmValuesRequest
	12, // 13: tunnel.ServerMessage.helmDeleteRequest:type_name -> tunnel.HelmDeleteRequest
	13, // 14: tunnel.ServerMessage.helmInstallRequest:type_name -> tunnel.HelmInstallRequest
	18, // 15: tunnel.ServerMessage.terminalStream:type_name -> tunnel.TerminalStream
	19, // 16: tunnel.ServerMessage.dbuiRequest:type_name -> tunnel.DbUiRequest
	2,  // 17: tunnel.ServerMessage.terminalRequest:type_name -> tunnel.TerminalRequest
	23, // 18: tunnel.ProxyRequest.headers:type_name -> tunnel.ProxyRequest.HeadersEntry
	0,  // 19: tunnel.ProxyResponse.status:type_name -> tunnel.ProxyResponseType
	24, // 20: tunnel.ProxyResponse.headers:type_name -> tunnel.ProxyResponse.HeadersEntry
	17, // 21: tunnel.ProjectsResponse.projects:type_name -> tunnel.Project
	25, // 22: tunnel.DbUiRequest.labels:type_name -> tunnel.DbUiRequest.LabelsEntry
	1,  // 23: tunnel.TunnelService.Connect:input_type -> tunnel.AgentMessage
	3,  // 24: tunnel.TunnelService.Connect:output_type -> tunnel.ServerMessage
	24, // [24:25] is the sub-list for method output_type
	23, // [23:24] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_tunnel_proto_init() }
func file_tunnel_proto_init() {
	if File_tunnel_proto != nil {
		return
	}
	file_tunnel_proto_msgTypes[0].OneofWrappers = []any{
		(*AgentMessage_Registration)(nil),
		(*AgentMessage_Status)(nil),
		(*AgentMessage_Proxy)(nil),
		(*AgentMessage_HelmValues)(nil),
		(*AgentMessage_HelmDelete)(nil),
		(*AgentMessage_HelmInstall)(nil),
		(*AgentMessage_TerminalStream)(nil),
		(*AgentMessage_PgwebResponse)(nil),
	}
	file_tunnel_proto_msgTypes[2].OneofWrappers = []any{
		(*ServerMessage_Registration)(nil),
		(*ServerMessage_Status)(nil),
		(*ServerMessage_Proxy)(nil),
		(*ServerMessage_Projects)(nil),
		(*ServerMessage_HelmValuesRequest)(nil),
		(*ServerMessage_HelmDeleteRequest)(nil),
		(*ServerMessage_HelmInstallRequest)(nil),
		(*ServerMessage_TerminalStream)(nil),
		(*ServerMessage_DbuiRequest)(nil),
		(*ServerMessage_TerminalRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tunnel_proto_rawDesc), len(file_tunnel_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tunnel_proto_goTypes,
		DependencyIndexes: file_tunnel_proto_depIdxs,
		EnumInfos:         file_tunnel_proto_enumTypes,
		MessageInfos:      file_tunnel_proto_msgTypes,
	}.Build()
	File_tunnel_proto = out.File
	file_tunnel_proto_goTypes = nil
	file_tunnel_proto_depIdxs = nil
}
